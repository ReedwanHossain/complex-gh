name: CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    # generate image tag based on commit hash


    env:
        POSTGRES_PASSWORD: postgres_password
        REDIS_HOST: redis
        REDIS_PORT: 6379
        PGUSER: postgres
        PGHOST: postgres
        PGDATABASE: postgres
        PGPASSWORD: postgres_password
        PGPORT: 5432
        WDS_SOCKET_PORT: 0
        NODE_ENV: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Compose
        run: |
         sudo curl -L "https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
         sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and Push Docker images
        run: |
         docker-compose -f compose.yml build
         docker-compose -f compose.yml push

    #   - name: Copy Docker Compose file to server
    #     uses: appleboy/scp-action@master
    #     with:
    #       host: ${{ secrets.SERVER_HOST }}
    #       username: ${{ secrets.SERVER_USER }}
    #       key: ${{ secrets.SSH_PRIVATE_KEY }}
    #       source: "docker/docker-compose.yml"
    #       target: "/var/www/prod"

    #   - name: Deploy on server
    #     uses: appleboy/ssh-action@master
    #     with:
    #       host: ${{ secrets.SERVER_HOST }}
    #       username: ${{ secrets.SERVER_USER }}
    #       key: ${{ secrets.SSH_PRIVATE_KEY }}
    #       script: |
    #         cd /var/www/prod
    #         docker-compose -f docker/docker-compose.yml pull
    #         docker-compose -f docker/docker-compose.yml up -d


